edge_attr (torch.Size([24000, 10])): tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
SLURM ID: 0
Start Pre-Training
No pre-trained checkpoint found.

TRAIN.PY
i_batch: 0
train_be (24000): tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
train_bs (2000): tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
train_bt (12): tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')


EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0')
x_t (torch.Size([12, 2])): tensor([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], device='cuda:0')
edge_attr (torch.Size([24000, 10])): tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0')
u (torch.Size([1, 10])): tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0')
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])

EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[-1.8849e-05,  9.4243e-06, -3.7697e-05,  ..., -9.4243e-05,
         -2.8273e-05, -3.7697e-05],
        [-1.8849e-05,  9.4243e-06, -3.7697e-05,  ..., -9.4243e-05,
         -2.8273e-05, -3.7697e-05],
        [-1.8849e-05,  9.4243e-06, -3.7697e-05,  ..., -9.4243e-05,
         -2.8273e-05, -3.7697e-05],
        ...,
        [-1.8849e-05,  9.4243e-06, -3.7697e-05,  ..., -9.4243e-05,
         -2.8273e-05, -3.7697e-05],
        [-1.8849e-05,  9.4243e-06, -3.7697e-05,  ..., -9.4243e-05,
         -2.8273e-05, -3.7697e-05],
        [-1.8849e-05,  9.4243e-06, -3.7697e-05,  ..., -9.4243e-05,
         -2.8273e-05, -3.7697e-05]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
x_t (torch.Size([12, 2])): tensor([[0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000],
        [0.0006, 0.0000]], device='cuda:0', grad_fn=<NativeBatchNormBackward0>)
edge_attr (torch.Size([24000, 10])): tensor([[ 0.0000e+00,  5.8902e-07, -9.4243e-06,  ...,  4.7122e-06,
          0.0000e+00, -4.7122e-06],
        [ 0.0000e+00,  5.8902e-07, -9.4243e-06,  ...,  4.7122e-06,
          0.0000e+00, -4.7122e-06],
        [ 0.0000e+00,  5.8902e-07, -9.4243e-06,  ...,  4.7122e-06,
          0.0000e+00, -4.7122e-06],
        ...,
        [ 0.0000e+00,  5.8902e-07, -9.4243e-06,  ...,  4.7122e-06,
          0.0000e+00, -4.7122e-06],
        [ 0.0000e+00,  5.8902e-07, -9.4243e-06,  ...,  4.7122e-06,
          0.0000e+00, -4.7122e-06],
        [ 0.0000e+00,  5.8902e-07, -9.4243e-06,  ...,  4.7122e-06,
          0.0000e+00, -4.7122e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
u (torch.Size([1, 10])): tensor([[ 0.1673, -0.0288, -0.9247,  0.0732,  0.5275, -0.1183,  0.2978, -0.8298,
         -0.5348, -0.1255]], device='cuda:0', grad_fn=<AddmmBackward0>)
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])

EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[ 2.9451e-06,  1.8849e-05, -1.1309e-04,  ..., -4.7122e-06,
          1.4136e-05, -2.9451e-06],
        [ 2.9451e-06,  1.8849e-05, -1.1309e-04,  ..., -4.7122e-06,
          1.4136e-05, -2.9451e-06],
        [ 2.9451e-06,  1.8849e-05, -1.1309e-04,  ..., -4.7122e-06,
          1.4136e-05, -2.9451e-06],
        ...,
        [ 2.9451e-06,  1.8849e-05, -1.1309e-04,  ..., -4.7122e-06,
          1.4136e-05, -2.9451e-06],
        [ 2.9451e-06,  1.8849e-05, -1.1309e-04,  ..., -4.7122e-06,
          1.4136e-05, -2.9451e-06],
        [ 2.9451e-06,  1.8849e-05, -1.1309e-04,  ..., -4.7122e-06,
          1.4136e-05, -2.9451e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
x_t (torch.Size([12, 2])): tensor([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], device='cuda:0', grad_fn=<NativeBatchNormBackward0>)
edge_attr (torch.Size([24000, 10])): tensor([[-9.4243e-06,  5.8902e-07,  0.0000e+00,  ..., -4.7122e-06,
          0.0000e+00,  0.0000e+00],
        [-9.4243e-06,  5.8902e-07,  0.0000e+00,  ..., -4.7122e-06,
          0.0000e+00,  0.0000e+00],
        [-9.4243e-06,  5.8902e-07,  0.0000e+00,  ..., -4.7122e-06,
          0.0000e+00,  0.0000e+00],
        ...,
        [-9.4243e-06,  5.8902e-07,  0.0000e+00,  ..., -4.7122e-06,
          0.0000e+00,  0.0000e+00],
        [-9.4243e-06,  5.8902e-07,  0.0000e+00,  ..., -4.7122e-06,
          0.0000e+00,  0.0000e+00],
        [-9.4243e-06,  5.8902e-07,  0.0000e+00,  ..., -4.7122e-06,
          0.0000e+00,  0.0000e+00]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
u (torch.Size([1, 10])): tensor([[  2.8899,  -7.3782, -32.5474,   0.5300, -23.8059,  14.2295,  14.3768,
          -0.5393, -17.1807,   8.7849]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])

EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[ 4.7122e-05, -1.8849e-04,  7.5395e-05,  ...,  9.4243e-06,
         -1.5079e-04,  1.8849e-05],
        [ 4.7122e-05, -1.8849e-04,  7.5395e-05,  ...,  9.4243e-06,
         -1.5079e-04,  1.8849e-05],
        [ 4.7122e-05, -1.8849e-04,  7.5395e-05,  ...,  9.4243e-06,
         -1.5079e-04,  1.8849e-05],
        ...,
        [ 4.7122e-05, -1.8849e-04,  7.5395e-05,  ...,  9.4243e-06,
         -1.5079e-04,  1.8849e-05],
        [ 4.7122e-05, -1.8849e-04,  7.5395e-05,  ...,  9.4243e-06,
         -1.5079e-04,  1.8849e-05],
        [ 4.7122e-05, -1.8849e-04,  7.5395e-05,  ...,  9.4243e-06,
         -1.5079e-04,  1.8849e-05]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
x_t (torch.Size([12, 2])): tensor([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], device='cuda:0', grad_fn=<NativeBatchNormBackward0>)
edge_attr (torch.Size([24000, 10])): tensor([[-3.7697e-05, -7.5395e-05, -1.8849e-05,  ..., -3.7697e-05,
          0.0000e+00,  7.5395e-05],
        [-3.7697e-05, -7.5395e-05, -1.8849e-05,  ..., -3.7697e-05,
          0.0000e+00,  7.5395e-05],
        [-3.7697e-05, -7.5395e-05, -1.8849e-05,  ..., -3.7697e-05,
          0.0000e+00,  7.5395e-05],
        ...,
        [-3.7697e-05, -7.5395e-05, -1.8849e-05,  ..., -3.7697e-05,
          0.0000e+00,  7.5395e-05],
        [-3.7697e-05, -7.5395e-05, -1.8849e-05,  ..., -3.7697e-05,
          0.0000e+00,  7.5395e-05],
        [-3.7697e-05, -7.5395e-05, -1.8849e-05,  ..., -3.7697e-05,
          0.0000e+00,  7.5395e-05]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
u (torch.Size([1, 10])): tensor([[-1.2084, -2.5507, -6.0421,  0.7519, -3.2407,  4.6681, -1.1391,  0.4153,
          2.5954, -0.8759]], device='cuda:0', grad_fn=<AddmmBackward0>)
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])
Traceback (most recent call last):
  File "/home/jl5824/pfs-neural-net/train.py", line 218, in <module>
    loss, gu, nu, ot, ut = Loss(time_pred, graph, penalty=penalty_pre, batchsize=batchsize)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jl5824/pfs-neural-net/train.py", line 60, in Loss
    + torch.nn.functional.relu(time_sum - 2.0) * (reward[:, 2] - 2 * reward[:, 1] + reward[:, 0])
                                                  ~~~~~~^^^^^^
IndexError: index 2 is out of bounds for dimension 1 with size 2

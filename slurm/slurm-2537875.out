edge_attr (torch.Size([24000, 10])): tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]])
SLURM ID: 0
Start Pre-Training
No pre-trained checkpoint found.

TRAIN.PY
i_batch: 0
train_be (24000): tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
train_bs (2000): tensor([0, 0, 0,  ..., 0, 0, 0], device='cuda:0')
train_bt (12): tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0')


EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0')
x_t (torch.Size([12, 2])): tensor([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], device='cuda:0')
edge_attr (torch.Size([24000, 10])): tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='cuda:0')
u (torch.Size([1, 10])): tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], device='cuda:0')
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])

EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[ 0.0000e+00,  9.4243e-06, -9.4243e-06,  ...,  0.0000e+00,
         -4.7122e-05, -2.3561e-06],
        [ 0.0000e+00,  9.4243e-06, -9.4243e-06,  ...,  0.0000e+00,
         -4.7122e-05, -2.3561e-06],
        [ 0.0000e+00,  9.4243e-06, -9.4243e-06,  ...,  0.0000e+00,
         -4.7122e-05, -2.3561e-06],
        ...,
        [ 0.0000e+00,  9.4243e-06, -9.4243e-06,  ...,  0.0000e+00,
         -4.7122e-05, -2.3561e-06],
        [ 0.0000e+00,  9.4243e-06, -9.4243e-06,  ...,  0.0000e+00,
         -4.7122e-05, -2.3561e-06],
        [ 0.0000e+00,  9.4243e-06, -9.4243e-06,  ...,  0.0000e+00,
         -4.7122e-05, -2.3561e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
x_t (torch.Size([12, 2])): tensor([[0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.],
        [0., 0.]], device='cuda:0', grad_fn=<NativeBatchNormBackward0>)
edge_attr (torch.Size([24000, 10])): tensor([[-4.7122e-06,  2.3561e-06,  4.7122e-06,  ...,  5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [-4.7122e-06,  2.3561e-06,  4.7122e-06,  ...,  5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [-4.7122e-06,  2.3561e-06,  4.7122e-06,  ...,  5.8902e-07,
          0.0000e+00, -4.7122e-06],
        ...,
        [-4.7122e-06,  2.3561e-06,  4.7122e-06,  ...,  5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [-4.7122e-06,  2.3561e-06,  4.7122e-06,  ...,  5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [-4.7122e-06,  2.3561e-06,  4.7122e-06,  ...,  5.8902e-07,
          0.0000e+00, -4.7122e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
u (torch.Size([1, 10])): tensor([[-0.0263, -0.6321,  0.1905,  0.3854,  0.1139,  0.1514,  1.7593, -0.5147,
         -1.1501, -0.9555]], device='cuda:0', grad_fn=<AddmmBackward0>)
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])

EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[-4.7122e-06, -4.7122e-05, -9.4243e-06,  ...,  2.8273e-05,
          9.4243e-06, -2.3561e-06],
        [-4.7122e-06, -4.7122e-05, -9.4243e-06,  ...,  2.8273e-05,
          9.4243e-06, -2.3561e-06],
        [-4.7122e-06, -4.7122e-05, -9.4243e-06,  ...,  2.8273e-05,
          9.4243e-06, -2.3561e-06],
        ...,
        [-4.7122e-06, -4.7122e-05, -9.4243e-06,  ...,  2.8273e-05,
          9.4243e-06, -2.3561e-06],
        [-4.7122e-06, -4.7122e-05, -9.4243e-06,  ...,  2.8273e-05,
          9.4243e-06, -2.3561e-06],
        [-4.7122e-06, -4.7122e-05, -9.4243e-06,  ...,  2.8273e-05,
          9.4243e-06, -2.3561e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
x_t (torch.Size([12, 2])): tensor([[-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05],
        [-7.5395e-05,  3.7697e-05]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
edge_attr (torch.Size([24000, 10])): tensor([[ 4.7122e-06,  9.4243e-06,  0.0000e+00,  ..., -5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [ 4.7122e-06,  9.4243e-06,  0.0000e+00,  ..., -5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [ 4.7122e-06,  9.4243e-06,  0.0000e+00,  ..., -5.8902e-07,
          0.0000e+00, -4.7122e-06],
        ...,
        [ 4.7122e-06,  9.4243e-06,  0.0000e+00,  ..., -5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [ 4.7122e-06,  9.4243e-06,  0.0000e+00,  ..., -5.8902e-07,
          0.0000e+00, -4.7122e-06],
        [ 4.7122e-06,  9.4243e-06,  0.0000e+00,  ..., -5.8902e-07,
          0.0000e+00, -4.7122e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
u (torch.Size([1, 10])): tensor([[-0.1713, -0.3617,  0.2693, -0.0359, -0.0024, -0.1018, -0.0190,  0.0978,
          0.1937, -0.0416]], device='cuda:0', grad_fn=<AddmmBackward0>)
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])

EDGE MODEL FORWARD
src (torch.Size([24000])): tensor([   0,    0,    0,  ..., 1999, 1999, 1999], device='cuda:0')
tgt (torch.Size([24000])): tensor([0, 1, 2,  ..., 7, 8, 9], device='cuda:0')
x_s (torch.Size([2000, 10])): tensor([[ 4.7122e-06,  0.0000e+00, -3.7697e-05,  ...,  1.8849e-05,
          2.3561e-06,  4.7122e-05],
        [ 4.7122e-06,  0.0000e+00, -3.7697e-05,  ...,  1.8849e-05,
          2.3561e-06,  4.7122e-05],
        [ 4.7122e-06,  0.0000e+00, -3.7697e-05,  ...,  1.8849e-05,
          2.3561e-06,  4.7122e-05],
        ...,
        [ 4.7122e-06,  0.0000e+00, -3.7697e-05,  ...,  1.8849e-05,
          2.3561e-06,  4.7122e-05],
        [ 4.7122e-06,  0.0000e+00, -3.7697e-05,  ...,  1.8849e-05,
          2.3561e-06,  4.7122e-05],
        [ 4.7122e-06,  0.0000e+00, -3.7697e-05,  ...,  1.8849e-05,
          2.3561e-06,  4.7122e-05]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
x_t (torch.Size([12, 2])): tensor([[0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012],
        [0.0000, 0.0012]], device='cuda:0', grad_fn=<NativeBatchNormBackward0>)
edge_attr (torch.Size([24000, 10])): tensor([[ 0.0000e+00, -2.3561e-06,  0.0000e+00,  ...,  9.4243e-06,
          0.0000e+00,  4.7122e-06],
        [ 0.0000e+00, -2.3561e-06,  0.0000e+00,  ...,  9.4243e-06,
          0.0000e+00,  4.7122e-06],
        [ 0.0000e+00, -2.3561e-06,  0.0000e+00,  ...,  9.4243e-06,
          0.0000e+00,  4.7122e-06],
        ...,
        [ 0.0000e+00, -2.3561e-06,  0.0000e+00,  ...,  9.4243e-06,
          0.0000e+00,  4.7122e-06],
        [ 0.0000e+00, -2.3561e-06,  0.0000e+00,  ...,  9.4243e-06,
          0.0000e+00,  4.7122e-06],
        [ 0.0000e+00, -2.3561e-06,  0.0000e+00,  ...,  9.4243e-06,
          0.0000e+00,  4.7122e-06]], device='cuda:0',
       grad_fn=<NativeBatchNormBackward0>)
u (torch.Size([1, 10])): tensor([[ 0.4881, -0.4681,  4.2336, -0.4987,  1.5493,  0.0986,  0.7425, -0.0896,
         -3.7068, -0.9850]], device='cuda:0', grad_fn=<AddmmBackward0>)
h (torch.Size([24000, 32]))
x_s[src] (torch.Size([24000, 10]))
x_t[tgt] (torch.Size([24000, 2]))
edge_attr (torch.Size([24000, 10]))
u[batch_e] torch.Size([24000, 10])
Traceback (most recent call last):
  File "/home/jl5824/pfs-neural-net/train.py", line 265, in <module>
    loss, gu, nu, ot, ut = Loss(time_pred, graph, penalty=penalty_pre, batchsize=batchsize)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: Loss() got an unexpected keyword argument 'batchsize'
